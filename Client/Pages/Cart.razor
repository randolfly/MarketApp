@page "/cart"
@inject ICartService CartService

<PageTitle>Shopping Cart</PageTitle>
<h3>Shopping Cart</h3>

@if (_cartProducts == null || _cartProducts.Count == 0)
{
    <span>@_message</span>
}
else
{
    <div>
        @foreach (var product in _cartProducts)
        {
            <div class="container">
                <div class="image-wrapper">
                    <img src="@product.ImageUrl" class="image"/>
                </div>
                <div class="name">
                    <h5>
                        <a href="/product/@product.ProductId">@product.Title</a>
                    </h5>
                    <span>@product.ProductType</span>
                </div>
                <div class="cart-product-price">
                    $@product.Price
                </div>
            </div>
        }
        <div class="cart-product-price">
            Total (@_cartProducts.Count): $@_cartProducts.Sum(c => c.Price)
        </div>
    </div>
}

@code {
    List<CartProductResponse> _cartProducts = null;
    string _message = "Loading cart...";

    protected override async Task OnInitializedAsync()
    {
        if ((await CartService.GetCartItems()).Count == 0)
        {
            _message = "Your cart is empty.";
            _cartProducts = new List<CartProductResponse>();
        }
        else
        {
            _cartProducts = await CartService.GetCartProducts();
        }

    }
}